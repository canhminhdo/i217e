in ../../pgm.cafe

-- ----------------------------------------------------------------------------
-- LEMMA2: \forall I J \in NAT: (I < J) implies (not (J < I)) .
-- [require] 
-- ----------------------------------------------------------------------------

select PNAT
--> PROOF: LEMMA2
--> base case
open PNAT .
    var I : PNat .
    red (0 < I) implies (not (I < 0)) .
close

--> induction case
--> case 1
open PNAT .
    ops i j : -> PNat .    
    
    -- induction case for i
        -- base case for j
    red ((s(i) < 0) implies (not (0 < s(i)))) .
close

--> case 2.1.1
open PNAT .
    ops i j : -> PNat .    
    
    -- case splitting
    eq (i < j) = true .
    eq (j < i) = true .
    -- induction case for i
        -- induction case for j
    red 
        (((i < j)) implies (not (j < i))) implies
        ((s(i) < s(j)) implies (not (s(j) < s(i)))) .
close

--> case 2.1.2
open PNAT .
    ops i j : -> PNat .    
    
    -- case splitting
    eq (i < j) = true .
    eq (j < i) = false .
    -- induction case for i
        -- induction case for j
    red ((s(i) < s(j)) implies (not (s(j) < s(i)))) .
close

--> case 2.2
open PNAT .
    ops i j : -> PNat .    
    
    -- case splitting
    eq (i < j) = false .
    -- induction case for i
        -- induction case for j
    red ((s(i) < s(j)) implies (not (s(j) < s(i)))) .
close
