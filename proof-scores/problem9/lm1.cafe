in ../../pgm.cafe

-- ----------------------------------------------------------------------------
-- LEMMA1: \forall L1, L2, L3 \in NatList: diff(L1 @ L2, L3) = diff(L1, L3) @ diff(L2, L3) .
-- [require]
-- ----------------------------------------------------------------------------

select NATLIST
--> PROOF: LEMMA1
--> base case
open NATLIST .
    ops l2 l3 : -> NatList .

    red diff(nil @ l2, l3) = diff(nil, l3) @ diff(l2, l3) .
close

--> induction case with case splitting
--> case 1
open NATLIST .
    op x : -> PNat .
    ops l1 l2 l3 : -> NatList .

    -- induction hypothesis
    eq [IH] : diff(l1 @ l2, l3) = diff(l1, l3) @ diff(l2, l3) .
    eq has(l3, x) = true .
    -- induction case
    red diff((x | l1) @ l2, l3) = diff(x | l1, l3) @ diff(l2, l3) .
close

--> case 2
open NATLIST .
    op x : -> PNat .
    ops l1 l2 l3 : -> NatList .

    -- induction hypothesis
    eq [IH] : diff(l1 @ l2, l3) = diff(l1, l3) @ diff(l2, l3) .
    eq has(l3, x) = false .
    -- induction case
    red diff((x | l1) @ l2, l3) = diff(x | l1, l3) @ diff(l2, l3) .
close